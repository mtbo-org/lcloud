plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group = 'org.mtbo.lcloud'
version = '3.1.2-M7'

apply plugin: 'application'
mainClassName = 'SqlDiscoveryExample'

repositories {
    mavenCentral()
}

configurations.configureEach {
    exclude module: 'netty-transport-native-epoll'
    exclude module: 'netty-resolver-dns-native-macos'
}

dependencies {
    implementation project(':lcloud-common')
    implementation project(':lcloud-udp-discovery')
    implementation project(':lcloud-sql-discovery')
    implementation "io.projectreactor:reactor-core:$reactorVersion"
    testImplementation platform("org.junit:junit-bom:$junitVersion")
    testImplementation 'org.junit.jupiter:junit-jupiter'

    runtimeOnly "org.springframework.data:spring-data-r2dbc:$r2dbcVersion"
    runtimeOnly "org.postgresql:r2dbc-postgresql:$r2dbcPostgresVersion"
    runtimeOnly "io.netty:netty-handler:4.2.1.Final"
    runtimeOnly 'com.google.code.findbugs:jsr305:3.0.2'
    runtimeOnly 'org.slf4j:slf4j-jdk14:2.0.17'
}

test {
    useJUnitPlatform()
}

tasks.register('runApp', JavaExec) {
    mainClass = 'SqlDiscoveryExample'
    classpath = sourceSets.main.runtimeClasspath + sourceSets.main.output
}

jar {
    manifest {
        attributes(
                'Main-Class': 'SqlDiscoveryExample',
                'Multi-Release': 'true'
        )

    }
    into('lib') {
        from 'libs'
    }
}